-*- outline -*-

* add tests for instantaneous gates
the traub91 model in ns-sli serves as an example.

* add tests for channels with concen dependent gates only
the traub91 model in ns-sli serves as an example.

* implement the tabulator as an SSP service
This should solve most interface problems with the tabulator.

* write documentation for heccer callouts

* Implement rule de l'hopital in the tabulator.
See tests/genesis/hopital for a validation example.

* table index addressing
Results are cast from int to void * back to int.  I guess that some of
the functions are doing to much work, ie. there is not a clean
separation of concerns.

* compilation of outputs
truncates output files, perhaps that should be moved to the initiation
sequence ?  Would be handy if starting the studio from ssp, output
files would not be truncated.

* add double exp. for ca pools
See chat with Paolo.

* test config
get_current_revision_id is being used, but that gives an wrong
revision id on an unchanged workspace, or I cannot figure out what it
is doing.

* some tests don't work on ric-neurospaces-02
check files heccer-tables.output and heccer-spikes.output.  Perhaps
related to not recompiling heccer and integrating the proper
neurospaces library.

* running tests on a user machine
requires mtn installed, because the test.config tries to execute mtn.

* add springmass channels to the perl glue
** add events
** add springmass2 test
based on the springmass4 test
check if the same test output can be used.

* configure
** Check for the neurospaces.h file
then set the variable to compile the neurospaces integrator (or not).
** solve the heccer/neurospaces dependencies that Mike Schachter reported.

* add the mtn revision to the dist, somehow.

* Perhaps I should drand48() for Linux rng
Is declared obsoleted, see man page.

* SETMAT_FLUXPOOL initial value
Because ->iPool is only used as a boolean indicator, we can replace it
with ->dInitFlux, with a value of DBL_MAX meaning no flux must be
calculated.

* integrators
rename to 'interfaces', to stress the loose coupling.
** Heccer.pm mentions 'intergrator plugin'
Needs to be adapted.
** neurospaces interface
has fixed size buffers, see two commits ago.  Remove fixed size buffers.

* addressing
Last mechanism can not have more than one output, see addressing.c
TODO developer comments.

* perl glue
comp2mech entry should default to -1 terminated array of all zeros,
when there are no mechanisms.

* intermediary concy checker
** number of entries in comp2mech
** values of comp2mech entries

* Revisit the compartments mops and mats
Needs update of all tests (also in ssp).
** mats: inject
** mops: all the others

* Revisit the channel definitions to generalize
The members of the channel structures should be more easily
understandable, and, as far as possible, be shared between the
different definitions, such that the procedures below, and their
associated data structures (in mechanism.h) have one common worker
algorithm.
** HeccerBasalActivatorTabulate
** HeccerChannelPersistentSteadyStateDualTauTabulate
** HeccerChannelPersistentSteadyStateTauTabulate
** HeccerChannelSteadyStateSteppedTauTabulate
** HeccerDiscretizeBasalActivator
** HeccerDiscretizeGateConcept
** HeccerGateConceptTabulate

* ChannelSteadyStateSteppedTau
** check if members have correct names
According to the Genesis documentation, the time constant comes from
the first table, the steady state from the second.

* swig interface
** implement callouts
#t callbacks and swig are still a problem, solutions for python seem
#t more easy that for perl.
#t see http://search.cpan.org/src/JHPB/X11-Wcl-0.3/examples/


