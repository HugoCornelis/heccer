#!/usr/bin/perl -d:ptkdb
#!/usr/bin/perl -w
#!/usr/bin/perl -d:ptkdb
#
#
# Builds a distribution, including checks using automake and checks
# specific for this package
#

use strict;


# get the major release name

my $major = $ARGV[0] || '';

# get the minor release name

my $minor = $ARGV[1] || '';

# get the micro release name

my $micro = $ARGV[2] || '';

# generate a release version

system "./generate-release-version \"$major\" \"$minor\" \"$micro\"";

if ($?)
{
    die "$0: ./generate-release-version $major-$minor-$micro failed";
}


# make sure we have an initial makefile

system "./configure";

if ($?)
{
    die "$0: ./configure failed";
}


# make sure we remove alien files

system "make distclean";

if ($?)
{
    die "$0: distclean failed";
}


# remake the makefiles

system "./configure";

if ($?)
{
    die "$0: ./configure failed";
}


# check the complete distribution

system "make distcheck";

if ($?)
{
    die "$0: distcheck failed";
}


# remove the distribution

#! this is supposed to remove a distribution with possibly files that
#! are leftover from running the tests.  For some reason automake does
#! not detect this discrepancy.

system "make clean";

if ($?)
{
    die "$0: clean failed";
}


# generate html for the test cases

#! should be put in Makefile.am, but breaks distcheck.
#! this one breaks the distcheck, because automake makes dist dirs read-only

system "cd tests && ./tests_2_html";

if ($?)
{
    die "$0: generating html for the test cases failed";
}


# recreate the distribution

system "make dist";

if ($?)
{
    die "$0: dist failed";
}


# rebuild and test the distribution

system "./build-dist";

if ($?)
{
    die "$0: ./build-dist failed";
}


