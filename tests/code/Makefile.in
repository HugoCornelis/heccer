# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

##############################################################################
##############################################################################

#t note the use of builddir without '/' suffixed.

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
check_PROGRAMS = addressing-aggregator1$(EXEEXT) \
	addressing-purk-test-segment$(EXEEXT) \
	addressing-synchan$(EXEEXT) aggregator-kc$(EXEEXT) \
	aggregator-kc-feedback$(EXEEXT) c1c2p1$(EXEEXT) \
	c1c2p2$(EXEEXT) callout1$(EXEEXT) calloutInjector$(EXEEXT) \
	channel1-nernst1$(EXEEXT) channel2-nernst1$(EXEEXT) \
	channel2-nernst2$(EXEEXT) check-compartment$(EXEEXT) \
	doublea-aggregator$(EXEEXT) doublep$(EXEEXT) fork3p$(EXEEXT) \
	fork4p1$(EXEEXT) fork4p2$(EXEEXT) fork4p3$(EXEEXT) \
	hh1$(EXEEXT) perfectclamp-passive1$(EXEEXT) \
	perfectclamp-passive10$(EXEEXT) \
	perfectclamp-passive10-2$(EXEEXT) pool1$(EXEEXT) \
	pool1-contributors2$(EXEEXT) pool1-feedback1$(EXEEXT) \
	pool1-feedback2$(EXEEXT) pool1-nernst$(EXEEXT) pool2$(EXEEXT) \
	serialization-c1c2p1$(EXEEXT) serialization-c1c2p2$(EXEEXT) \
	serialization-channel2-nernst2$(EXEEXT) \
	serialization-doublep$(EXEEXT) serialization-fork3p$(EXEEXT) \
	serialization-fork4p1$(EXEEXT) serialization-fork4p2$(EXEEXT) \
	serialization-fork4p3$(EXEEXT) \
	serialization-pool1-feedback2$(EXEEXT) \
	serialization-pool2$(EXEEXT) \
	serialization-singlea-naf$(EXEEXT) \
	serialization-singlep$(EXEEXT) \
	serialization-tensizesp$(EXEEXT) \
	serialization-triplep$(EXEEXT) singlea-naf$(EXEEXT) \
	singlea-naf-current$(EXEEXT) singlea-naf2-aggregator$(EXEEXT) \
	singlep$(EXEEXT) spiker1$(EXEEXT) spiker2$(EXEEXT) \
	spiker3$(EXEEXT) springmass1$(EXEEXT) springmass2$(EXEEXT) \
	springmass3$(EXEEXT) springmass4$(EXEEXT) table-cap$(EXEEXT) \
	table-cat$(EXEEXT) table-dual-kdr$(EXEEXT) \
	table-dual-km$(EXEEXT) table-k2$(EXEEXT) table-ka$(EXEEXT) \
	table-kc$(EXEEXT) table-kdr$(EXEEXT) table-kdr2$(EXEEXT) \
	table-kh$(EXEEXT) table-km$(EXEEXT) table-naf$(EXEEXT) \
	table-nap$(EXEEXT) tensizesp$(EXEEXT) triplep$(EXEEXT) \
	vclamp-passive$(EXEEXT) vclamp-sodium$(EXEEXT) \
	version$(EXEEXT)
subdir = tests/code
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/heccer/config.h
CONFIG_CLEAN_FILES =
addressing_aggregator1_SOURCES = addressing-aggregator1.c
addressing_aggregator1_OBJECTS = addressing-aggregator1.$(OBJEXT)
addressing_purk_test_segment_SOURCES = addressing-purk-test-segment.c
addressing_purk_test_segment_OBJECTS =  \
	addressing-purk-test-segment.$(OBJEXT)
addressing_synchan_SOURCES = addressing-synchan.c
addressing_synchan_OBJECTS = addressing-synchan.$(OBJEXT)
aggregator_kc_SOURCES = aggregator-kc.c
aggregator_kc_OBJECTS = aggregator-kc.$(OBJEXT)
aggregator_kc_feedback_SOURCES = aggregator-kc-feedback.c
aggregator_kc_feedback_OBJECTS = aggregator-kc-feedback.$(OBJEXT)
c1c2p1_SOURCES = c1c2p1.c
c1c2p1_OBJECTS = c1c2p1.$(OBJEXT)
c1c2p2_SOURCES = c1c2p2.c
c1c2p2_OBJECTS = c1c2p2.$(OBJEXT)
callout1_SOURCES = callout1.c
callout1_OBJECTS = callout1.$(OBJEXT)
calloutInjector_SOURCES = calloutInjector.c
calloutInjector_OBJECTS = calloutInjector.$(OBJEXT)
channel1_nernst1_SOURCES = channel1-nernst1.c
channel1_nernst1_OBJECTS = channel1-nernst1.$(OBJEXT)
channel2_nernst1_SOURCES = channel2-nernst1.c
channel2_nernst1_OBJECTS = channel2-nernst1.$(OBJEXT)
channel2_nernst2_SOURCES = channel2-nernst2.c
channel2_nernst2_OBJECTS = channel2-nernst2.$(OBJEXT)
check_compartment_SOURCES = check-compartment.c
check_compartment_OBJECTS = check-compartment.$(OBJEXT)
doublea_aggregator_SOURCES = doublea-aggregator.c
doublea_aggregator_OBJECTS = doublea-aggregator.$(OBJEXT)
doublep_SOURCES = doublep.c
doublep_OBJECTS = doublep.$(OBJEXT)
fork3p_SOURCES = fork3p.c
fork3p_OBJECTS = fork3p.$(OBJEXT)
fork4p1_SOURCES = fork4p1.c
fork4p1_OBJECTS = fork4p1.$(OBJEXT)
fork4p2_SOURCES = fork4p2.c
fork4p2_OBJECTS = fork4p2.$(OBJEXT)
fork4p3_SOURCES = fork4p3.c
fork4p3_OBJECTS = fork4p3.$(OBJEXT)
hh1_SOURCES = hh1.c
hh1_OBJECTS = hh1.$(OBJEXT)
perfectclamp_passive1_SOURCES = perfectclamp-passive1.c
perfectclamp_passive1_OBJECTS = perfectclamp-passive1.$(OBJEXT)
perfectclamp_passive10_SOURCES = perfectclamp-passive10.c
perfectclamp_passive10_OBJECTS = perfectclamp-passive10.$(OBJEXT)
perfectclamp_passive10_2_SOURCES = perfectclamp-passive10-2.c
perfectclamp_passive10_2_OBJECTS = perfectclamp-passive10-2.$(OBJEXT)
pool1_SOURCES = pool1.c
pool1_OBJECTS = pool1.$(OBJEXT)
pool1_contributors2_SOURCES = pool1-contributors2.c
pool1_contributors2_OBJECTS = pool1-contributors2.$(OBJEXT)
pool1_feedback1_SOURCES = pool1-feedback1.c
pool1_feedback1_OBJECTS = pool1-feedback1.$(OBJEXT)
pool1_feedback2_SOURCES = pool1-feedback2.c
pool1_feedback2_OBJECTS = pool1-feedback2.$(OBJEXT)
pool1_nernst_SOURCES = pool1-nernst.c
pool1_nernst_OBJECTS = pool1-nernst.$(OBJEXT)
pool2_SOURCES = pool2.c
pool2_OBJECTS = pool2.$(OBJEXT)
serialization_c1c2p1_SOURCES = serialization-c1c2p1.c
serialization_c1c2p1_OBJECTS = serialization-c1c2p1.$(OBJEXT)
serialization_c1c2p2_SOURCES = serialization-c1c2p2.c
serialization_c1c2p2_OBJECTS = serialization-c1c2p2.$(OBJEXT)
serialization_channel2_nernst2_SOURCES =  \
	serialization-channel2-nernst2.c
serialization_channel2_nernst2_OBJECTS =  \
	serialization-channel2-nernst2.$(OBJEXT)
serialization_doublep_SOURCES = serialization-doublep.c
serialization_doublep_OBJECTS = serialization-doublep.$(OBJEXT)
serialization_fork3p_SOURCES = serialization-fork3p.c
serialization_fork3p_OBJECTS = serialization-fork3p.$(OBJEXT)
serialization_fork4p1_SOURCES = serialization-fork4p1.c
serialization_fork4p1_OBJECTS = serialization-fork4p1.$(OBJEXT)
serialization_fork4p2_SOURCES = serialization-fork4p2.c
serialization_fork4p2_OBJECTS = serialization-fork4p2.$(OBJEXT)
serialization_fork4p3_SOURCES = serialization-fork4p3.c
serialization_fork4p3_OBJECTS = serialization-fork4p3.$(OBJEXT)
serialization_pool1_feedback2_SOURCES =  \
	serialization-pool1-feedback2.c
serialization_pool1_feedback2_OBJECTS =  \
	serialization-pool1-feedback2.$(OBJEXT)
serialization_pool2_SOURCES = serialization-pool2.c
serialization_pool2_OBJECTS = serialization-pool2.$(OBJEXT)
serialization_singlea_naf_SOURCES = serialization-singlea-naf.c
serialization_singlea_naf_OBJECTS =  \
	serialization-singlea-naf.$(OBJEXT)
serialization_singlep_SOURCES = serialization-singlep.c
serialization_singlep_OBJECTS = serialization-singlep.$(OBJEXT)
serialization_tensizesp_SOURCES = serialization-tensizesp.c
serialization_tensizesp_OBJECTS = serialization-tensizesp.$(OBJEXT)
serialization_triplep_SOURCES = serialization-triplep.c
serialization_triplep_OBJECTS = serialization-triplep.$(OBJEXT)
singlea_naf_SOURCES = singlea-naf.c
singlea_naf_OBJECTS = singlea-naf.$(OBJEXT)
singlea_naf_current_SOURCES = singlea-naf-current.c
singlea_naf_current_OBJECTS = singlea-naf-current.$(OBJEXT)
singlea_naf2_aggregator_SOURCES = singlea-naf2-aggregator.c
singlea_naf2_aggregator_OBJECTS = singlea-naf2-aggregator.$(OBJEXT)
singlep_SOURCES = singlep.c
singlep_OBJECTS = singlep.$(OBJEXT)
spiker1_SOURCES = spiker1.c
spiker1_OBJECTS = spiker1.$(OBJEXT)
spiker2_SOURCES = spiker2.c
spiker2_OBJECTS = spiker2.$(OBJEXT)
spiker3_SOURCES = spiker3.c
spiker3_OBJECTS = spiker3.$(OBJEXT)
springmass1_SOURCES = springmass1.c
springmass1_OBJECTS = springmass1.$(OBJEXT)
springmass2_SOURCES = springmass2.c
springmass2_OBJECTS = springmass2.$(OBJEXT)
springmass3_SOURCES = springmass3.c
springmass3_OBJECTS = springmass3.$(OBJEXT)
springmass4_SOURCES = springmass4.c
springmass4_OBJECTS = springmass4.$(OBJEXT)
table_cap_SOURCES = table-cap.c
table_cap_OBJECTS = table-cap.$(OBJEXT)
table_cat_SOURCES = table-cat.c
table_cat_OBJECTS = table-cat.$(OBJEXT)
table_dual_kdr_SOURCES = table-dual-kdr.c
table_dual_kdr_OBJECTS = table-dual-kdr.$(OBJEXT)
table_dual_km_SOURCES = table-dual-km.c
table_dual_km_OBJECTS = table-dual-km.$(OBJEXT)
table_k2_SOURCES = table-k2.c
table_k2_OBJECTS = table-k2.$(OBJEXT)
table_ka_SOURCES = table-ka.c
table_ka_OBJECTS = table-ka.$(OBJEXT)
table_kc_SOURCES = table-kc.c
table_kc_OBJECTS = table-kc.$(OBJEXT)
table_kdr_SOURCES = table-kdr.c
table_kdr_OBJECTS = table-kdr.$(OBJEXT)
table_kdr2_SOURCES = table-kdr2.c
table_kdr2_OBJECTS = table-kdr2.$(OBJEXT)
table_kh_SOURCES = table-kh.c
table_kh_OBJECTS = table-kh.$(OBJEXT)
table_km_SOURCES = table-km.c
table_km_OBJECTS = table-km.$(OBJEXT)
table_naf_SOURCES = table-naf.c
table_naf_OBJECTS = table-naf.$(OBJEXT)
table_nap_SOURCES = table-nap.c
table_nap_OBJECTS = table-nap.$(OBJEXT)
tensizesp_SOURCES = tensizesp.c
tensizesp_OBJECTS = tensizesp.$(OBJEXT)
triplep_SOURCES = triplep.c
triplep_OBJECTS = triplep.$(OBJEXT)
vclamp_passive_SOURCES = vclamp-passive.c
vclamp_passive_OBJECTS = vclamp-passive.$(OBJEXT)
vclamp_sodium_SOURCES = vclamp-sodium.c
vclamp_sodium_OBJECTS = vclamp-sodium.$(OBJEXT)
version_SOURCES = version.c
version_OBJECTS = version.$(OBJEXT)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/heccer
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = addressing-aggregator1.c addressing-purk-test-segment.c \
	addressing-synchan.c aggregator-kc.c aggregator-kc-feedback.c \
	c1c2p1.c c1c2p2.c callout1.c calloutInjector.c \
	channel1-nernst1.c channel2-nernst1.c channel2-nernst2.c \
	check-compartment.c doublea-aggregator.c doublep.c fork3p.c \
	fork4p1.c fork4p2.c fork4p3.c hh1.c perfectclamp-passive1.c \
	perfectclamp-passive10.c perfectclamp-passive10-2.c pool1.c \
	pool1-contributors2.c pool1-feedback1.c pool1-feedback2.c \
	pool1-nernst.c pool2.c serialization-c1c2p1.c \
	serialization-c1c2p2.c serialization-channel2-nernst2.c \
	serialization-doublep.c serialization-fork3p.c \
	serialization-fork4p1.c serialization-fork4p2.c \
	serialization-fork4p3.c serialization-pool1-feedback2.c \
	serialization-pool2.c serialization-singlea-naf.c \
	serialization-singlep.c serialization-tensizesp.c \
	serialization-triplep.c singlea-naf.c singlea-naf-current.c \
	singlea-naf2-aggregator.c singlep.c spiker1.c spiker2.c \
	spiker3.c springmass1.c springmass2.c springmass3.c \
	springmass4.c table-cap.c table-cat.c table-dual-kdr.c \
	table-dual-km.c table-k2.c table-ka.c table-kc.c table-kdr.c \
	table-kdr2.c table-kh.c table-km.c table-naf.c table-nap.c \
	tensizesp.c triplep.c vclamp-passive.c vclamp-sodium.c \
	version.c
DIST_SOURCES = addressing-aggregator1.c addressing-purk-test-segment.c \
	addressing-synchan.c aggregator-kc.c aggregator-kc-feedback.c \
	c1c2p1.c c1c2p2.c callout1.c calloutInjector.c \
	channel1-nernst1.c channel2-nernst1.c channel2-nernst2.c \
	check-compartment.c doublea-aggregator.c doublep.c fork3p.c \
	fork4p1.c fork4p2.c fork4p3.c hh1.c perfectclamp-passive1.c \
	perfectclamp-passive10.c perfectclamp-passive10-2.c pool1.c \
	pool1-contributors2.c pool1-feedback1.c pool1-feedback2.c \
	pool1-nernst.c pool2.c serialization-c1c2p1.c \
	serialization-c1c2p2.c serialization-channel2-nernst2.c \
	serialization-doublep.c serialization-fork3p.c \
	serialization-fork4p1.c serialization-fork4p2.c \
	serialization-fork4p3.c serialization-pool1-feedback2.c \
	serialization-pool2.c serialization-singlea-naf.c \
	serialization-singlep.c serialization-tensizesp.c \
	serialization-triplep.c singlea-naf.c singlea-naf-current.c \
	singlea-naf2-aggregator.c singlep.c spiker1.c spiker2.c \
	spiker3.c springmass1.c springmass2.c springmass3.c \
	springmass4.c table-cap.c table-cat.c table-dual-kdr.c \
	table-dual-km.c table-k2.c table-ka.c table-kc.c table-kdr.c \
	table-kdr2.c table-kh.c table-km.c table-naf.c table-nap.c \
	tensizesp.c triplep.c vclamp-passive.c vclamp-sodium.c \
	version.c
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARFLAGS = @ARFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@

# ease debugging
CFLAGS = -O0
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
HECCER_INTEGRATORS = @HECCER_INTEGRATORS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHON = @PYTHON@
PYTHONHOME = @PYTHONHOME@
PYTHON_EXE = @PYTHON_EXE@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_HEADERS = @PYTHON_HEADERS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SWIGCOMPILELINKSFORPERL = @SWIGCOMPILELINKSFORPERL@
SWIGCOMPILELINKSFORPYTHON = @SWIGCOMPILELINKSFORPYTHON@
SWIGLDLINKSFORPERL = @SWIGLDLINKSFORPERL@
SWIGLDLINKSFORPYTHON = @SWIGLDLINKSFORPYTHON@
TEST_SPECIFICATION_FILES = @TEST_SPECIFICATION_FILES@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
AM_CFLAGS = -g3 -fPIC -Wmissing-prototypes -Wmissing-declarations -ffloat-store -I$(srcdir)/.. -I$(builddir)../.. -include heccer/config.h -DPRE_PROTO_TRAVERSAL -D__NO_MATH_INLINES
noinst_HEADERS = \
	main-serializer.c \
	main-serializer.h \
	main.c \
	main.h

addressing_aggregator1_DEPENDENCIES = ../../libheccer.a main.c
addressing_aggregator1_LDADD = -L../.. -lheccer -lm
addressing_purk_test_segment_DEPENDENCIES = ../../libheccer.a main.c
addressing_purk_test_segment_LDADD = -L../.. -lheccer -lm
addressing_synchan_DEPENDENCIES = ../../libheccer.a main.c
addressing_synchan_LDADD = -L../.. -lheccer -lm
aggregator_kc_DEPENDENCIES = ../../libheccer.a main.c
aggregator_kc_LDADD = -L../.. -lheccer -lm
aggregator_kc_feedback_DEPENDENCIES = ../../libheccer.a main.c
aggregator_kc_feedback_LDADD = -L../.. -lheccer -lm
c1c2p1_DEPENDENCIES = ../../libheccer.a main.c
c1c2p1_LDADD = -L../.. -lheccer -lm
c1c2p2_DEPENDENCIES = ../../libheccer.a main.c
c1c2p2_LDADD = -L../.. -lheccer -lm
callout1_DEPENDENCIES = ../../libheccer.a main.c
callout1_LDADD = -L../.. -lheccer -lm
calloutInjector_DEPENDENCIES = ../../libheccer.a main.c
calloutInjector_LDADD = -L../.. -lheccer -lm
channel1_nernst1_DEPENDENCIES = ../../libheccer.a main.c
channel1_nernst1_LDADD = -L../.. -lheccer -lm
channel2_nernst1_DEPENDENCIES = ../../libheccer.a main.c
channel2_nernst1_LDADD = -L../.. -lheccer -lm
channel2_nernst2_DEPENDENCIES = ../../libheccer.a main.c
channel2_nernst2_LDADD = -L../.. -lheccer -lm
check_compartment_DEPENDENCIES = ../../libheccer.a main.c
check_compartment_LDADD = -L../.. -lheccer -lm
doublea_aggregator_DEPENDENCIES = ../../libheccer.a main.c
doublea_aggregator_LDADD = -L../.. -lheccer -lm
doublep_DEPENDENCIES = ../../libheccer.a main.c
doublep_LDADD = -L../.. -lheccer -lm
fork3p_DEPENDENCIES = ../../libheccer.a main.c
fork3p_LDADD = -L../.. -lheccer -lm
fork4p1_DEPENDENCIES = ../../libheccer.a main.c
fork4p1_LDADD = -L../.. -lheccer -lm
fork4p2_DEPENDENCIES = ../../libheccer.a main.c
fork4p2_LDADD = -L../.. -lheccer -lm
fork4p3_DEPENDENCIES = ../../libheccer.a main.c
fork4p3_LDADD = -L../.. -lheccer -lm
hh1_DEPENDENCIES = ../../libheccer.a main.c
hh1_LDADD = -L../.. -lheccer -lm
perfectclamp_passive1_DEPENDENCIES = ../../libheccer.a main.c
perfectclamp_passive1_LDADD = -L../.. -lheccer -lm
perfectclamp_passive10_2_DEPENDENCIES = ../../libheccer.a main.c
perfectclamp_passive10_2_LDADD = -L../.. -lheccer -lm
perfectclamp_passive10_DEPENDENCIES = ../../libheccer.a main.c
perfectclamp_passive10_LDADD = -L../.. -lheccer -lm
pool1_DEPENDENCIES = ../../libheccer.a main.c
pool1_LDADD = -L../.. -lheccer -lm
pool1_contributors2_DEPENDENCIES = ../../libheccer.a main.c
pool1_contributors2_LDADD = -L../.. -lheccer -lm
pool1_feedback1_DEPENDENCIES = ../../libheccer.a main.c
pool1_feedback1_LDADD = -L../.. -lheccer -lm
pool1_feedback2_DEPENDENCIES = ../../libheccer.a main.c
pool1_feedback2_LDADD = -L../.. -lheccer -lm
pool1_nernst_DEPENDENCIES = ../../libheccer.a main.c
pool1_nernst_LDADD = -L../.. -lheccer -lm
pool2_DEPENDENCIES = ../../libheccer.a main.c
pool2_LDADD = -L../.. -lheccer -lm
serialization_c1c2p1_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_c1c2p1_LDADD = -L../.. -lheccer -lm
serialization_c1c2p2_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_c1c2p2_LDADD = -L../.. -lheccer -lm
serialization_channel2_nernst2_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_channel2_nernst2_LDADD = -L../.. -lheccer -lm
serialization_doublep_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_doublep_LDADD = -L../.. -lheccer -lm
serialization_fork3p_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_fork3p_LDADD = -L../.. -lheccer -lm
serialization_fork4p1_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_fork4p1_LDADD = -L../.. -lheccer -lm
serialization_fork4p2_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_fork4p2_LDADD = -L../.. -lheccer -lm
serialization_fork4p3_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_fork4p3_LDADD = -L../.. -lheccer -lm
serialization_pool1_feedback2_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_pool1_feedback2_LDADD = -L../.. -lheccer -lm
serialization_pool2_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_pool2_LDADD = -L../.. -lheccer -lm
serialization_singlea_naf_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_singlea_naf_LDADD = -L../.. -lheccer -lm
serialization_singlep_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_singlep_LDADD = -L../.. -lheccer -lm
serialization_tensizesp_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_tensizesp_LDADD = -L../.. -lheccer -lm
serialization_triplep_DEPENDENCIES = ../../libheccer.a main.c main-serializer.c
serialization_triplep_LDADD = -L../.. -lheccer -lm
singlea_naf2_aggregator_DEPENDENCIES = ../../libheccer.a main.c
singlea_naf2_aggregator_LDADD = -L../.. -lheccer -lm
singlea_naf_DEPENDENCIES = ../../libheccer.a main.c
singlea_naf_LDADD = -L../.. -lheccer -lm
singlea_naf_current_DEPENDENCIES = ../../libheccer.a main.c
singlea_naf_current_LDADD = -L../.. -lheccer -lm
singlep_DEPENDENCIES = ../../libheccer.a main.c
singlep_LDADD = -L../.. -lheccer -lm
spiker1_DEPENDENCIES = ../../libheccer.a main.c
spiker1_LDADD = -L../.. -lheccer -lm
spiker2_DEPENDENCIES = ../../libheccer.a main.c
spiker2_LDADD = -L../.. -lheccer -lm
spiker3_DEPENDENCIES = ../../libheccer.a main.c
spiker3_LDADD = -L../.. -lheccer -lm
springmass1_DEPENDENCIES = ../../libheccer.a main.c
springmass1_LDADD = -L../.. -lheccer -lm
springmass2_DEPENDENCIES = ../../libheccer.a main.c
springmass2_LDADD = -L../.. -lheccer -lm
springmass3_DEPENDENCIES = ../../libheccer.a main.c
springmass3_LDADD = -L../.. -lheccer -lm
springmass4_DEPENDENCIES = ../../libheccer.a main.c
springmass4_LDADD = -L../.. -lheccer -lm
table_cap_DEPENDENCIES = ../../libheccer.a main.c
table_cap_LDADD = -L../.. -lheccer -lm
table_cat_DEPENDENCIES = ../../libheccer.a main.c
table_cat_LDADD = -L../.. -lheccer -lm
table_dual_kdr_DEPENDENCIES = ../../libheccer.a main.c
table_dual_kdr_LDADD = -L../.. -lheccer -lm
table_dual_km_DEPENDENCIES = ../../libheccer.a main.c
table_dual_km_LDADD = -L../.. -lheccer -lm
table_k2_DEPENDENCIES = ../../libheccer.a main.c
table_k2_LDADD = -L../.. -lheccer -lm
table_ka_DEPENDENCIES = ../../libheccer.a main.c
table_ka_LDADD = -L../.. -lheccer -lm
table_kc_DEPENDENCIES = ../../libheccer.a main.c
table_kc_LDADD = -L../.. -lheccer -lm
table_kdr_DEPENDENCIES = ../../libheccer.a main.c
table_kdr_LDADD = -L../.. -lheccer -lm
table_kdr2_DEPENDENCIES = ../../libheccer.a main.c
table_kdr2_LDADD = -L../.. -lheccer -lm
table_kh_DEPENDENCIES = ../../libheccer.a main.c
table_kh_LDADD = -L../.. -lheccer -lm
table_km_DEPENDENCIES = ../../libheccer.a main.c
table_km_LDADD = -L../.. -lheccer -lm
table_naf_DEPENDENCIES = ../../libheccer.a main.c
table_naf_LDADD = -L../.. -lheccer -lm
table_nap_DEPENDENCIES = ../../libheccer.a main.c
table_nap_LDADD = -L../.. -lheccer -lm
tensizesp_DEPENDENCIES = ../../libheccer.a main.c
tensizesp_LDADD = -L../.. -lheccer -lm
triplep_DEPENDENCIES = ../../libheccer.a main.c
triplep_LDADD = -L../.. -lheccer -lm
vclamp_passive_DEPENDENCIES = ../../libheccer.a
vclamp_passive_LDADD = -L../.. -lheccer -lm
vclamp_sodium_DEPENDENCIES = ../../libheccer.a
vclamp_sodium_LDADD = -L../.. -lheccer -lm
version_DEPENDENCIES = ../../libheccer.a
version_LDADD = -L../.. -lheccer -lm
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  tests/code/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  tests/code/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
addressing-aggregator1$(EXEEXT): $(addressing_aggregator1_OBJECTS) $(addressing_aggregator1_DEPENDENCIES) 
	@rm -f addressing-aggregator1$(EXEEXT)
	$(LINK) $(addressing_aggregator1_LDFLAGS) $(addressing_aggregator1_OBJECTS) $(addressing_aggregator1_LDADD) $(LIBS)
addressing-purk-test-segment$(EXEEXT): $(addressing_purk_test_segment_OBJECTS) $(addressing_purk_test_segment_DEPENDENCIES) 
	@rm -f addressing-purk-test-segment$(EXEEXT)
	$(LINK) $(addressing_purk_test_segment_LDFLAGS) $(addressing_purk_test_segment_OBJECTS) $(addressing_purk_test_segment_LDADD) $(LIBS)
addressing-synchan$(EXEEXT): $(addressing_synchan_OBJECTS) $(addressing_synchan_DEPENDENCIES) 
	@rm -f addressing-synchan$(EXEEXT)
	$(LINK) $(addressing_synchan_LDFLAGS) $(addressing_synchan_OBJECTS) $(addressing_synchan_LDADD) $(LIBS)
aggregator-kc$(EXEEXT): $(aggregator_kc_OBJECTS) $(aggregator_kc_DEPENDENCIES) 
	@rm -f aggregator-kc$(EXEEXT)
	$(LINK) $(aggregator_kc_LDFLAGS) $(aggregator_kc_OBJECTS) $(aggregator_kc_LDADD) $(LIBS)
aggregator-kc-feedback$(EXEEXT): $(aggregator_kc_feedback_OBJECTS) $(aggregator_kc_feedback_DEPENDENCIES) 
	@rm -f aggregator-kc-feedback$(EXEEXT)
	$(LINK) $(aggregator_kc_feedback_LDFLAGS) $(aggregator_kc_feedback_OBJECTS) $(aggregator_kc_feedback_LDADD) $(LIBS)
c1c2p1$(EXEEXT): $(c1c2p1_OBJECTS) $(c1c2p1_DEPENDENCIES) 
	@rm -f c1c2p1$(EXEEXT)
	$(LINK) $(c1c2p1_LDFLAGS) $(c1c2p1_OBJECTS) $(c1c2p1_LDADD) $(LIBS)
c1c2p2$(EXEEXT): $(c1c2p2_OBJECTS) $(c1c2p2_DEPENDENCIES) 
	@rm -f c1c2p2$(EXEEXT)
	$(LINK) $(c1c2p2_LDFLAGS) $(c1c2p2_OBJECTS) $(c1c2p2_LDADD) $(LIBS)
callout1$(EXEEXT): $(callout1_OBJECTS) $(callout1_DEPENDENCIES) 
	@rm -f callout1$(EXEEXT)
	$(LINK) $(callout1_LDFLAGS) $(callout1_OBJECTS) $(callout1_LDADD) $(LIBS)
calloutInjector$(EXEEXT): $(calloutInjector_OBJECTS) $(calloutInjector_DEPENDENCIES) 
	@rm -f calloutInjector$(EXEEXT)
	$(LINK) $(calloutInjector_LDFLAGS) $(calloutInjector_OBJECTS) $(calloutInjector_LDADD) $(LIBS)
channel1-nernst1$(EXEEXT): $(channel1_nernst1_OBJECTS) $(channel1_nernst1_DEPENDENCIES) 
	@rm -f channel1-nernst1$(EXEEXT)
	$(LINK) $(channel1_nernst1_LDFLAGS) $(channel1_nernst1_OBJECTS) $(channel1_nernst1_LDADD) $(LIBS)
channel2-nernst1$(EXEEXT): $(channel2_nernst1_OBJECTS) $(channel2_nernst1_DEPENDENCIES) 
	@rm -f channel2-nernst1$(EXEEXT)
	$(LINK) $(channel2_nernst1_LDFLAGS) $(channel2_nernst1_OBJECTS) $(channel2_nernst1_LDADD) $(LIBS)
channel2-nernst2$(EXEEXT): $(channel2_nernst2_OBJECTS) $(channel2_nernst2_DEPENDENCIES) 
	@rm -f channel2-nernst2$(EXEEXT)
	$(LINK) $(channel2_nernst2_LDFLAGS) $(channel2_nernst2_OBJECTS) $(channel2_nernst2_LDADD) $(LIBS)
check-compartment$(EXEEXT): $(check_compartment_OBJECTS) $(check_compartment_DEPENDENCIES) 
	@rm -f check-compartment$(EXEEXT)
	$(LINK) $(check_compartment_LDFLAGS) $(check_compartment_OBJECTS) $(check_compartment_LDADD) $(LIBS)
doublea-aggregator$(EXEEXT): $(doublea_aggregator_OBJECTS) $(doublea_aggregator_DEPENDENCIES) 
	@rm -f doublea-aggregator$(EXEEXT)
	$(LINK) $(doublea_aggregator_LDFLAGS) $(doublea_aggregator_OBJECTS) $(doublea_aggregator_LDADD) $(LIBS)
doublep$(EXEEXT): $(doublep_OBJECTS) $(doublep_DEPENDENCIES) 
	@rm -f doublep$(EXEEXT)
	$(LINK) $(doublep_LDFLAGS) $(doublep_OBJECTS) $(doublep_LDADD) $(LIBS)
fork3p$(EXEEXT): $(fork3p_OBJECTS) $(fork3p_DEPENDENCIES) 
	@rm -f fork3p$(EXEEXT)
	$(LINK) $(fork3p_LDFLAGS) $(fork3p_OBJECTS) $(fork3p_LDADD) $(LIBS)
fork4p1$(EXEEXT): $(fork4p1_OBJECTS) $(fork4p1_DEPENDENCIES) 
	@rm -f fork4p1$(EXEEXT)
	$(LINK) $(fork4p1_LDFLAGS) $(fork4p1_OBJECTS) $(fork4p1_LDADD) $(LIBS)
fork4p2$(EXEEXT): $(fork4p2_OBJECTS) $(fork4p2_DEPENDENCIES) 
	@rm -f fork4p2$(EXEEXT)
	$(LINK) $(fork4p2_LDFLAGS) $(fork4p2_OBJECTS) $(fork4p2_LDADD) $(LIBS)
fork4p3$(EXEEXT): $(fork4p3_OBJECTS) $(fork4p3_DEPENDENCIES) 
	@rm -f fork4p3$(EXEEXT)
	$(LINK) $(fork4p3_LDFLAGS) $(fork4p3_OBJECTS) $(fork4p3_LDADD) $(LIBS)
hh1$(EXEEXT): $(hh1_OBJECTS) $(hh1_DEPENDENCIES) 
	@rm -f hh1$(EXEEXT)
	$(LINK) $(hh1_LDFLAGS) $(hh1_OBJECTS) $(hh1_LDADD) $(LIBS)
perfectclamp-passive1$(EXEEXT): $(perfectclamp_passive1_OBJECTS) $(perfectclamp_passive1_DEPENDENCIES) 
	@rm -f perfectclamp-passive1$(EXEEXT)
	$(LINK) $(perfectclamp_passive1_LDFLAGS) $(perfectclamp_passive1_OBJECTS) $(perfectclamp_passive1_LDADD) $(LIBS)
perfectclamp-passive10$(EXEEXT): $(perfectclamp_passive10_OBJECTS) $(perfectclamp_passive10_DEPENDENCIES) 
	@rm -f perfectclamp-passive10$(EXEEXT)
	$(LINK) $(perfectclamp_passive10_LDFLAGS) $(perfectclamp_passive10_OBJECTS) $(perfectclamp_passive10_LDADD) $(LIBS)
perfectclamp-passive10-2$(EXEEXT): $(perfectclamp_passive10_2_OBJECTS) $(perfectclamp_passive10_2_DEPENDENCIES) 
	@rm -f perfectclamp-passive10-2$(EXEEXT)
	$(LINK) $(perfectclamp_passive10_2_LDFLAGS) $(perfectclamp_passive10_2_OBJECTS) $(perfectclamp_passive10_2_LDADD) $(LIBS)
pool1$(EXEEXT): $(pool1_OBJECTS) $(pool1_DEPENDENCIES) 
	@rm -f pool1$(EXEEXT)
	$(LINK) $(pool1_LDFLAGS) $(pool1_OBJECTS) $(pool1_LDADD) $(LIBS)
pool1-contributors2$(EXEEXT): $(pool1_contributors2_OBJECTS) $(pool1_contributors2_DEPENDENCIES) 
	@rm -f pool1-contributors2$(EXEEXT)
	$(LINK) $(pool1_contributors2_LDFLAGS) $(pool1_contributors2_OBJECTS) $(pool1_contributors2_LDADD) $(LIBS)
pool1-feedback1$(EXEEXT): $(pool1_feedback1_OBJECTS) $(pool1_feedback1_DEPENDENCIES) 
	@rm -f pool1-feedback1$(EXEEXT)
	$(LINK) $(pool1_feedback1_LDFLAGS) $(pool1_feedback1_OBJECTS) $(pool1_feedback1_LDADD) $(LIBS)
pool1-feedback2$(EXEEXT): $(pool1_feedback2_OBJECTS) $(pool1_feedback2_DEPENDENCIES) 
	@rm -f pool1-feedback2$(EXEEXT)
	$(LINK) $(pool1_feedback2_LDFLAGS) $(pool1_feedback2_OBJECTS) $(pool1_feedback2_LDADD) $(LIBS)
pool1-nernst$(EXEEXT): $(pool1_nernst_OBJECTS) $(pool1_nernst_DEPENDENCIES) 
	@rm -f pool1-nernst$(EXEEXT)
	$(LINK) $(pool1_nernst_LDFLAGS) $(pool1_nernst_OBJECTS) $(pool1_nernst_LDADD) $(LIBS)
pool2$(EXEEXT): $(pool2_OBJECTS) $(pool2_DEPENDENCIES) 
	@rm -f pool2$(EXEEXT)
	$(LINK) $(pool2_LDFLAGS) $(pool2_OBJECTS) $(pool2_LDADD) $(LIBS)
serialization-c1c2p1$(EXEEXT): $(serialization_c1c2p1_OBJECTS) $(serialization_c1c2p1_DEPENDENCIES) 
	@rm -f serialization-c1c2p1$(EXEEXT)
	$(LINK) $(serialization_c1c2p1_LDFLAGS) $(serialization_c1c2p1_OBJECTS) $(serialization_c1c2p1_LDADD) $(LIBS)
serialization-c1c2p2$(EXEEXT): $(serialization_c1c2p2_OBJECTS) $(serialization_c1c2p2_DEPENDENCIES) 
	@rm -f serialization-c1c2p2$(EXEEXT)
	$(LINK) $(serialization_c1c2p2_LDFLAGS) $(serialization_c1c2p2_OBJECTS) $(serialization_c1c2p2_LDADD) $(LIBS)
serialization-channel2-nernst2$(EXEEXT): $(serialization_channel2_nernst2_OBJECTS) $(serialization_channel2_nernst2_DEPENDENCIES) 
	@rm -f serialization-channel2-nernst2$(EXEEXT)
	$(LINK) $(serialization_channel2_nernst2_LDFLAGS) $(serialization_channel2_nernst2_OBJECTS) $(serialization_channel2_nernst2_LDADD) $(LIBS)
serialization-doublep$(EXEEXT): $(serialization_doublep_OBJECTS) $(serialization_doublep_DEPENDENCIES) 
	@rm -f serialization-doublep$(EXEEXT)
	$(LINK) $(serialization_doublep_LDFLAGS) $(serialization_doublep_OBJECTS) $(serialization_doublep_LDADD) $(LIBS)
serialization-fork3p$(EXEEXT): $(serialization_fork3p_OBJECTS) $(serialization_fork3p_DEPENDENCIES) 
	@rm -f serialization-fork3p$(EXEEXT)
	$(LINK) $(serialization_fork3p_LDFLAGS) $(serialization_fork3p_OBJECTS) $(serialization_fork3p_LDADD) $(LIBS)
serialization-fork4p1$(EXEEXT): $(serialization_fork4p1_OBJECTS) $(serialization_fork4p1_DEPENDENCIES) 
	@rm -f serialization-fork4p1$(EXEEXT)
	$(LINK) $(serialization_fork4p1_LDFLAGS) $(serialization_fork4p1_OBJECTS) $(serialization_fork4p1_LDADD) $(LIBS)
serialization-fork4p2$(EXEEXT): $(serialization_fork4p2_OBJECTS) $(serialization_fork4p2_DEPENDENCIES) 
	@rm -f serialization-fork4p2$(EXEEXT)
	$(LINK) $(serialization_fork4p2_LDFLAGS) $(serialization_fork4p2_OBJECTS) $(serialization_fork4p2_LDADD) $(LIBS)
serialization-fork4p3$(EXEEXT): $(serialization_fork4p3_OBJECTS) $(serialization_fork4p3_DEPENDENCIES) 
	@rm -f serialization-fork4p3$(EXEEXT)
	$(LINK) $(serialization_fork4p3_LDFLAGS) $(serialization_fork4p3_OBJECTS) $(serialization_fork4p3_LDADD) $(LIBS)
serialization-pool1-feedback2$(EXEEXT): $(serialization_pool1_feedback2_OBJECTS) $(serialization_pool1_feedback2_DEPENDENCIES) 
	@rm -f serialization-pool1-feedback2$(EXEEXT)
	$(LINK) $(serialization_pool1_feedback2_LDFLAGS) $(serialization_pool1_feedback2_OBJECTS) $(serialization_pool1_feedback2_LDADD) $(LIBS)
serialization-pool2$(EXEEXT): $(serialization_pool2_OBJECTS) $(serialization_pool2_DEPENDENCIES) 
	@rm -f serialization-pool2$(EXEEXT)
	$(LINK) $(serialization_pool2_LDFLAGS) $(serialization_pool2_OBJECTS) $(serialization_pool2_LDADD) $(LIBS)
serialization-singlea-naf$(EXEEXT): $(serialization_singlea_naf_OBJECTS) $(serialization_singlea_naf_DEPENDENCIES) 
	@rm -f serialization-singlea-naf$(EXEEXT)
	$(LINK) $(serialization_singlea_naf_LDFLAGS) $(serialization_singlea_naf_OBJECTS) $(serialization_singlea_naf_LDADD) $(LIBS)
serialization-singlep$(EXEEXT): $(serialization_singlep_OBJECTS) $(serialization_singlep_DEPENDENCIES) 
	@rm -f serialization-singlep$(EXEEXT)
	$(LINK) $(serialization_singlep_LDFLAGS) $(serialization_singlep_OBJECTS) $(serialization_singlep_LDADD) $(LIBS)
serialization-tensizesp$(EXEEXT): $(serialization_tensizesp_OBJECTS) $(serialization_tensizesp_DEPENDENCIES) 
	@rm -f serialization-tensizesp$(EXEEXT)
	$(LINK) $(serialization_tensizesp_LDFLAGS) $(serialization_tensizesp_OBJECTS) $(serialization_tensizesp_LDADD) $(LIBS)
serialization-triplep$(EXEEXT): $(serialization_triplep_OBJECTS) $(serialization_triplep_DEPENDENCIES) 
	@rm -f serialization-triplep$(EXEEXT)
	$(LINK) $(serialization_triplep_LDFLAGS) $(serialization_triplep_OBJECTS) $(serialization_triplep_LDADD) $(LIBS)
singlea-naf$(EXEEXT): $(singlea_naf_OBJECTS) $(singlea_naf_DEPENDENCIES) 
	@rm -f singlea-naf$(EXEEXT)
	$(LINK) $(singlea_naf_LDFLAGS) $(singlea_naf_OBJECTS) $(singlea_naf_LDADD) $(LIBS)
singlea-naf-current$(EXEEXT): $(singlea_naf_current_OBJECTS) $(singlea_naf_current_DEPENDENCIES) 
	@rm -f singlea-naf-current$(EXEEXT)
	$(LINK) $(singlea_naf_current_LDFLAGS) $(singlea_naf_current_OBJECTS) $(singlea_naf_current_LDADD) $(LIBS)
singlea-naf2-aggregator$(EXEEXT): $(singlea_naf2_aggregator_OBJECTS) $(singlea_naf2_aggregator_DEPENDENCIES) 
	@rm -f singlea-naf2-aggregator$(EXEEXT)
	$(LINK) $(singlea_naf2_aggregator_LDFLAGS) $(singlea_naf2_aggregator_OBJECTS) $(singlea_naf2_aggregator_LDADD) $(LIBS)
singlep$(EXEEXT): $(singlep_OBJECTS) $(singlep_DEPENDENCIES) 
	@rm -f singlep$(EXEEXT)
	$(LINK) $(singlep_LDFLAGS) $(singlep_OBJECTS) $(singlep_LDADD) $(LIBS)
spiker1$(EXEEXT): $(spiker1_OBJECTS) $(spiker1_DEPENDENCIES) 
	@rm -f spiker1$(EXEEXT)
	$(LINK) $(spiker1_LDFLAGS) $(spiker1_OBJECTS) $(spiker1_LDADD) $(LIBS)
spiker2$(EXEEXT): $(spiker2_OBJECTS) $(spiker2_DEPENDENCIES) 
	@rm -f spiker2$(EXEEXT)
	$(LINK) $(spiker2_LDFLAGS) $(spiker2_OBJECTS) $(spiker2_LDADD) $(LIBS)
spiker3$(EXEEXT): $(spiker3_OBJECTS) $(spiker3_DEPENDENCIES) 
	@rm -f spiker3$(EXEEXT)
	$(LINK) $(spiker3_LDFLAGS) $(spiker3_OBJECTS) $(spiker3_LDADD) $(LIBS)
springmass1$(EXEEXT): $(springmass1_OBJECTS) $(springmass1_DEPENDENCIES) 
	@rm -f springmass1$(EXEEXT)
	$(LINK) $(springmass1_LDFLAGS) $(springmass1_OBJECTS) $(springmass1_LDADD) $(LIBS)
springmass2$(EXEEXT): $(springmass2_OBJECTS) $(springmass2_DEPENDENCIES) 
	@rm -f springmass2$(EXEEXT)
	$(LINK) $(springmass2_LDFLAGS) $(springmass2_OBJECTS) $(springmass2_LDADD) $(LIBS)
springmass3$(EXEEXT): $(springmass3_OBJECTS) $(springmass3_DEPENDENCIES) 
	@rm -f springmass3$(EXEEXT)
	$(LINK) $(springmass3_LDFLAGS) $(springmass3_OBJECTS) $(springmass3_LDADD) $(LIBS)
springmass4$(EXEEXT): $(springmass4_OBJECTS) $(springmass4_DEPENDENCIES) 
	@rm -f springmass4$(EXEEXT)
	$(LINK) $(springmass4_LDFLAGS) $(springmass4_OBJECTS) $(springmass4_LDADD) $(LIBS)
table-cap$(EXEEXT): $(table_cap_OBJECTS) $(table_cap_DEPENDENCIES) 
	@rm -f table-cap$(EXEEXT)
	$(LINK) $(table_cap_LDFLAGS) $(table_cap_OBJECTS) $(table_cap_LDADD) $(LIBS)
table-cat$(EXEEXT): $(table_cat_OBJECTS) $(table_cat_DEPENDENCIES) 
	@rm -f table-cat$(EXEEXT)
	$(LINK) $(table_cat_LDFLAGS) $(table_cat_OBJECTS) $(table_cat_LDADD) $(LIBS)
table-dual-kdr$(EXEEXT): $(table_dual_kdr_OBJECTS) $(table_dual_kdr_DEPENDENCIES) 
	@rm -f table-dual-kdr$(EXEEXT)
	$(LINK) $(table_dual_kdr_LDFLAGS) $(table_dual_kdr_OBJECTS) $(table_dual_kdr_LDADD) $(LIBS)
table-dual-km$(EXEEXT): $(table_dual_km_OBJECTS) $(table_dual_km_DEPENDENCIES) 
	@rm -f table-dual-km$(EXEEXT)
	$(LINK) $(table_dual_km_LDFLAGS) $(table_dual_km_OBJECTS) $(table_dual_km_LDADD) $(LIBS)
table-k2$(EXEEXT): $(table_k2_OBJECTS) $(table_k2_DEPENDENCIES) 
	@rm -f table-k2$(EXEEXT)
	$(LINK) $(table_k2_LDFLAGS) $(table_k2_OBJECTS) $(table_k2_LDADD) $(LIBS)
table-ka$(EXEEXT): $(table_ka_OBJECTS) $(table_ka_DEPENDENCIES) 
	@rm -f table-ka$(EXEEXT)
	$(LINK) $(table_ka_LDFLAGS) $(table_ka_OBJECTS) $(table_ka_LDADD) $(LIBS)
table-kc$(EXEEXT): $(table_kc_OBJECTS) $(table_kc_DEPENDENCIES) 
	@rm -f table-kc$(EXEEXT)
	$(LINK) $(table_kc_LDFLAGS) $(table_kc_OBJECTS) $(table_kc_LDADD) $(LIBS)
table-kdr$(EXEEXT): $(table_kdr_OBJECTS) $(table_kdr_DEPENDENCIES) 
	@rm -f table-kdr$(EXEEXT)
	$(LINK) $(table_kdr_LDFLAGS) $(table_kdr_OBJECTS) $(table_kdr_LDADD) $(LIBS)
table-kdr2$(EXEEXT): $(table_kdr2_OBJECTS) $(table_kdr2_DEPENDENCIES) 
	@rm -f table-kdr2$(EXEEXT)
	$(LINK) $(table_kdr2_LDFLAGS) $(table_kdr2_OBJECTS) $(table_kdr2_LDADD) $(LIBS)
table-kh$(EXEEXT): $(table_kh_OBJECTS) $(table_kh_DEPENDENCIES) 
	@rm -f table-kh$(EXEEXT)
	$(LINK) $(table_kh_LDFLAGS) $(table_kh_OBJECTS) $(table_kh_LDADD) $(LIBS)
table-km$(EXEEXT): $(table_km_OBJECTS) $(table_km_DEPENDENCIES) 
	@rm -f table-km$(EXEEXT)
	$(LINK) $(table_km_LDFLAGS) $(table_km_OBJECTS) $(table_km_LDADD) $(LIBS)
table-naf$(EXEEXT): $(table_naf_OBJECTS) $(table_naf_DEPENDENCIES) 
	@rm -f table-naf$(EXEEXT)
	$(LINK) $(table_naf_LDFLAGS) $(table_naf_OBJECTS) $(table_naf_LDADD) $(LIBS)
table-nap$(EXEEXT): $(table_nap_OBJECTS) $(table_nap_DEPENDENCIES) 
	@rm -f table-nap$(EXEEXT)
	$(LINK) $(table_nap_LDFLAGS) $(table_nap_OBJECTS) $(table_nap_LDADD) $(LIBS)
tensizesp$(EXEEXT): $(tensizesp_OBJECTS) $(tensizesp_DEPENDENCIES) 
	@rm -f tensizesp$(EXEEXT)
	$(LINK) $(tensizesp_LDFLAGS) $(tensizesp_OBJECTS) $(tensizesp_LDADD) $(LIBS)
triplep$(EXEEXT): $(triplep_OBJECTS) $(triplep_DEPENDENCIES) 
	@rm -f triplep$(EXEEXT)
	$(LINK) $(triplep_LDFLAGS) $(triplep_OBJECTS) $(triplep_LDADD) $(LIBS)
vclamp-passive$(EXEEXT): $(vclamp_passive_OBJECTS) $(vclamp_passive_DEPENDENCIES) 
	@rm -f vclamp-passive$(EXEEXT)
	$(LINK) $(vclamp_passive_LDFLAGS) $(vclamp_passive_OBJECTS) $(vclamp_passive_LDADD) $(LIBS)
vclamp-sodium$(EXEEXT): $(vclamp_sodium_OBJECTS) $(vclamp_sodium_DEPENDENCIES) 
	@rm -f vclamp-sodium$(EXEEXT)
	$(LINK) $(vclamp_sodium_LDFLAGS) $(vclamp_sodium_OBJECTS) $(vclamp_sodium_LDADD) $(LIBS)
version$(EXEEXT): $(version_OBJECTS) $(version_DEPENDENCIES) 
	@rm -f version$(EXEEXT)
	$(LINK) $(version_LDFLAGS) $(version_OBJECTS) $(version_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addressing-aggregator1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addressing-purk-test-segment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addressing-synchan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aggregator-kc-feedback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aggregator-kc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/c1c2p1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/c1c2p2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/callout1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/calloutInjector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel1-nernst1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel2-nernst1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel2-nernst2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check-compartment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doublea-aggregator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doublep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fork3p.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fork4p1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fork4p2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fork4p3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hh1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perfectclamp-passive1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perfectclamp-passive10-2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perfectclamp-passive10.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pool1-contributors2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pool1-feedback1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pool1-feedback2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pool1-nernst.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pool1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pool2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-c1c2p1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-c1c2p2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-channel2-nernst2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-doublep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-fork3p.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-fork4p1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-fork4p2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-fork4p3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-pool1-feedback2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-pool2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-singlea-naf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-singlep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-tensizesp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialization-triplep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/singlea-naf-current.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/singlea-naf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/singlea-naf2-aggregator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/singlep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spiker1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spiker2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spiker3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/springmass1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/springmass2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/springmass3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/springmass4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-cap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-cat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-dual-kdr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-dual-km.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-k2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-ka.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-kc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-kdr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-kdr2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-kh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-km.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-naf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-nap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tensizesp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/triplep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vclamp-passive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vclamp-sodium.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/version.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am


#t automake does not allow to pass in arguments for tests ?

#check_SCRIPTS = $(srcdir)/../neurospaces_harness

#TESTS = $(srcdir)/../neurospaces_harness

#test: check
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
